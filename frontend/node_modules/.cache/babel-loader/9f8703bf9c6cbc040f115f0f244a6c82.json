{"ast":null,"code":"var _jsxFileName = \"/home/jason/csesoc/2022-trainee-1/src/components/Tasks.js\";\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = _ref => {\n  let {\n    tasks,\n    onDelete\n  } = _ref;\n\n  /*\n  tasks = name of the state\n  setTasks = function to update the state\n  the array = default used for this state\n  tasks is immutable --> to change it, you would have setTasks(new array, including the old one)\n  */\n  const sortedTasks = tasks.slice().sort((a, b) => a.dueDate && b.dueDate ? a.dueDate - b.dueDate : b.dueDate ? -1 : 1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sortedTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/jason/csesoc/2022-trainee-1/src/components/Tasks.js"],"names":["Task","Tasks","tasks","onDelete","sortedTasks","slice","sort","a","b","dueDate","map","task"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;;;;AAEA,MAAMC,KAAK,GAAG,QAAuB;AAAA,MAAtB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAsB;;AACjC;AACJ;AACA;AACA;AACA;AACA;AAEI,QAAMC,WAAW,GAAGF,KAAK,CAACG,KAAN,GAAcC,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,OAAF,IAAaD,CAAC,CAACC,OAAf,GAAyBF,CAAC,CAACE,OAAF,GAAYD,CAAC,CAACC,OAAvC,GAAiDD,CAAC,CAACC,OAAF,GAAY,CAAC,CAAb,GAAiB,CAA/F,CAApB;AAEA,sBACI;AAAA,cACKL,WAAW,CAACM,GAAZ,CAAiBC,IAAD,iBACb,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,QAAQ,EAAER;AAA5B;AAAA;AAAA;AAAA;AAAA,YADH;AADL,mBADJ;AAOH,CAjBD;;KAAMF,K;AAmBN,eAAeA,KAAf","sourcesContent":["import Task from './Task'\n\nconst Tasks = ({tasks, onDelete}) => {\n    /*\n    tasks = name of the state\n    setTasks = function to update the state\n    the array = default used for this state\n    tasks is immutable --> to change it, you would have setTasks(new array, including the old one)\n    */\n    \n    const sortedTasks = tasks.slice().sort((a, b) => a.dueDate && b.dueDate ? a.dueDate - b.dueDate : b.dueDate ? -1 : 1)\n    \n    return (\n        <>\n            {sortedTasks.map((task) => (\n                <Task task={task} onDelete={onDelete}/>\n            ))}\n        </>\n    )\n}\n\nexport default Tasks"]},"metadata":{},"sourceType":"module"}