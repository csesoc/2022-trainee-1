{"ast":null,"code":"var _jsxFileName = \"/home/jason/csesoc/2022-trainee-1/src/components/Tasks.js\";\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = _ref => {\n  let {\n    tasks,\n    onDelete\n  } = _ref;\n\n  /*\n  tasks = name of the state\n  setTasks = function to update the state\n  the array = default used for this state\n  tasks is immutable --> to change it, you would have setTasks(new array, including the old one)\n  */\n  const highPriorityTasks = tasks.filter(task, task.priority === 1);\n  const sortedTasks = tasks.slice().sort((a, b) => a.priority === b.priority ? a.dueDate && b.dueDate ? a.dueDate - b.dueDate : b.dueDate ? -1 : a.dueDate ? 1 : 0 : b.priority - a.priority);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sortedTasks.map(task => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        onDelete: onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.priority\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true))\n  }, void 0, false);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/jason/csesoc/2022-trainee-1/src/components/Tasks.js"],"names":["Task","Tasks","tasks","onDelete","highPriorityTasks","filter","task","priority","sortedTasks","slice","sort","a","b","dueDate","map"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;;;;AAEA,MAAMC,KAAK,GAAG,QAAuB;AAAA,MAAtB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAsB;;AACjC;AACJ;AACA;AACA;AACA;AACA;AACI,QAAMC,iBAAiB,GAAGF,KAAK,CAACG,MAAN,CAAaC,IAAb,EAAmBA,IAAI,CAACC,QAAL,KAAkB,CAArC,CAA1B;AACA,QAAMC,WAAW,GAAGN,KAAK,CAACO,KAAN,GAAcC,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACJ,QAAF,KAAeK,CAAC,CAACL,QAAjB,GAA6BI,CAAC,CAACE,OAAF,IAAaD,CAAC,CAACC,OAAf,GAA0BF,CAAC,CAACE,OAAF,GAAYD,CAAC,CAACC,OAAxC,GAAoDD,CAAC,CAACC,OAAF,GAAY,CAAC,CAAb,GAAkBF,CAAC,CAACE,OAAF,GAAY,CAAZ,GAAgB,CAAnH,GAA0HD,CAAC,CAACL,QAAF,GAAaI,CAAC,CAACJ,QAAtK,CAApB;AAEA,sBACI;AAAA,cACKC,WAAW,CAACM,GAAZ,CAAiBR,IAAD,iBACb;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,QAAQ,EAAEH;AAA5B;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAIG,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADH;AADL,mBADJ;AAUH,CApBD;;KAAMN,K;AAsBN,eAAeA,KAAf","sourcesContent":["import Task from './Task'\n\nconst Tasks = ({tasks, onDelete}) => {\n    /*\n    tasks = name of the state\n    setTasks = function to update the state\n    the array = default used for this state\n    tasks is immutable --> to change it, you would have setTasks(new array, including the old one)\n    */\n    const highPriorityTasks = tasks.filter(task, task.priority === 1)\n    const sortedTasks = tasks.slice().sort((a, b) => a.priority === b.priority ? (a.dueDate && b.dueDate ? (a.dueDate - b.dueDate) : (b.dueDate ? -1 : (a.dueDate ? 1 : 0))) : b.priority - a.priority)\n    \n    return (\n        <>\n            {sortedTasks.map((task) => (\n                <>\n                <Task task={task} onDelete={onDelete}/>\n                <p>{task.priority}</p>\n                </>\n            ))}\n        </>\n    )\n}\n\nexport default Tasks"]},"metadata":{},"sourceType":"module"}